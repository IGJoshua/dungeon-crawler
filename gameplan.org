#+TITLE: Game Plan


* Fundamentals
The minimum requirements to have a playable dungeon crawler:
** The Scene
The world is a flat plain of cells in a grid. Cells can contain the player and potentially one or more other objects.
*** Ground
The ground is going to be one of several different terrain types:
- Base ground (for example grass or cobblestone)
- Ground that can potentially impede movement (for example, cannot move in water without having swimming training/item like flippers)

*** Objects
Objects can have any combination of the following potential properties:
- Obstacles: These are things like walls, but don't necessarily have to be vertical.
- Interact-able: Potentially can be pressed when on the same space or facing it on an adjacent space, causing changes such as making a door object no longer an obstacle.
  For simplicity, no space should have more than one item initially.
- Decorative: Can move through them, are largely visual. Other objects potentially interact with them, for example a table in a cell might have an item on it, but the only thing to use is the item.
- Potentially a representation of an enemy--see discussion on [[Combat]]
** Movement
In these games the people you represent are typically a group of characters traveling as a party, but for simplicity I will just refer to their perspective as the player. The player moves through the world discretely, only ever in one cell of the world at a time. They move from one space to the next, and have the ability to also turn 90 degrees to face other directions. Mouse look might be possible as well for getting a good perspective of the surrounding area, but otherwise can be restricted to right angles.

** Mapping
The older style dungeon crawlers expected you to map the game yourself. More modern ones either provide an automap, or do the Etrian Odyssey style--
they show you a grid and fill in tiles you walk on, but it is up to you to add walls, items, notes, etc. I'm more partial to this latter style, as it makes the exploration a lot more exciting. This would require a 2d layout that can be filled in by clicking on dragging on it lines like a paint utility, and everything snapping to a grid that is the size of the world you are presently in.
** Combat
Separate battle happens in a turn based fashion, rather than monsters being directly present on the world moving. Scarier monsters can potentially be seen on the map, but the battles are handled in a JRPG style.

The main draw in these games is a sense of uncovering the next area and exploration, and combat is what makes that dangerous and something you question whether you should go back or push forwards a little more. The combat should also be reasonably interesting in its own right, however a lot of the following is suggested as a potential way to avoid complex systems.

The player's party deals damage each to party level, no stats. Each party member is able to nullify one type of damage, takes twice as much damage from one, and regular damage from others.

Special skills will allow the player to adjust the order party members block in, or potentially even double up, move party members out entirely. I'm imagining a bit of a Rondel with all the characters.

* Sound
Very likely common and basic actions need some sound to just give them more impact. A different sound for walking on different tiles, and likely a sound for
interacting with objects. Probably not the immediate priority.
* Animation
I suspect this is not something we will need to have in this game. If anything it would just be for nicer visuals. Trees swaying in the background or similar. If combat is actually implemented, potentially with sprites, that may be the best use for animation, and that could be 2D.
* Overall game loop:
1. Wait for player input. Any updates to the map can be done at any phase and are not blocking by the player.
2. If it is related to display information, do so, then on confirmation switch to 1. (menus to display inventory, etc.)
3. If it is an action, perform said action.
4. Update known map.
5. If enemies, they may move.
6. Check for possible combat, perform combat if so.
7. Loop back

If a tile is moved onto that contains a staircase, ladder, etc. may lead to loading a new scene.
